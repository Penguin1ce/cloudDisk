syntax = "v1"

service core-api {
	// 用户登录
	@handler UserLogin
	post /user/login (LoginRequest) returns (LoginResponse)

	// 用户详细
	@handler UserDetail
	get /user/detail (UserDetailRequest) returns (UserDetailResponse)

	// 邮箱验证码发送
	@handler MailCodeSendRegister
	post /user/code/send/register (MailCodeSendRequest) returns (CommonResponse)

	// 用户注册
	@handler UserRegister
	post /user/register (UserRegisterRequest) returns (CommonResponse)
}

@server (
	middleware: Auth
)
service core-api {
	// 上传文件
	@handler FileUpload
	post /file/upload (FileUploadRequest) returns (FileUploadResponse)

	// 用户存储关联
	@handler UserRepositorySave
	post /file/repository/save (UserRepositoryRequest) returns (UserRepositoryResponse)

	// 用户文件列表
	@handler UserFileList
	get /user/file/list (UserFileListRequest) returns (UserFileListResponse)
}

type UserFileListRequest {
	Id   int64 `json:"id,optional"`
	Page int   `json:"page,optional"`
	Size int   `json:"size,optional"`
}

type UserFileListResponse {
	Count int64       `json:"count"`
	List  []*UserFile `json:"list"`
}

type UserFile {
	Id                 int64  `json:"id"`
	Identity           string `json:"identity"`
	Name               string `json:"name"`
	Size               int64  `json:"size"`
	RepositoryIdentity string `json:"repositoryIdentity"`
	Ext                string `json:"ext"`
	Path               string `json:"path"`
}

type UserRepositoryRequest {
	ParentId           int64  `json:"parentId"`
	RepositoryIdentity string `json:"repositoryIdentity"`
	Name               string `json:"name"`
	Ext                string `json:"ext"`
}

type UserRepositoryResponse {}

type FileUploadRequest {
	Hash string `json:"hash,optional"`
	Name string `json:"name,optional"`
	Ext  string `json:"ext,optional"`
	Size int64  `json:"size,optional"`
	Path string `json:"path,optional"`
}

type FileUploadResponse {
	Identity string `json:"identity"`
	Name     string `json:"name"`
	Ext      string `json:"ext"`
}

type CommonResponse {
	Message string `json:"message"`
}

type LoginRequest {
	Name     string `json:"name"`
	Password string `json:"password"`
}

type LoginResponse {
	Token string `json:"token"`
}

type UserDetailRequest {
	Identity string `json:"identity"`
}

type UserDetailResponse {
	Name  string `json:"name"`
	Email string `json:"email"`
}

type MailCodeSendRequest {
	Email string `json:"email"`
}

type MailCodeSendResponse {
	Message string `json:"message"`
}

type UserRegisterRequest {
	Name     string `json:"name"`
	Password string `json:"password"`
	Email    string `json:"email"`
	Code     string `json:"code"`
}

